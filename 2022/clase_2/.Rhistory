knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(tidymodels)
library(baguette)
library(eph)
data <- read_delim("/home/laia/Escritorio/EF/ENUT/fuentes/enut2021_base.txt", delim = "|")
data <- data %>% select(ID,SEXO_SEL, TCS_GRUPO_DOMESTICO, CONDICION_ACTIVIDAD_AGRUPADA, REGION,
NIVEL_EDUCATIVO_AGRUPADO, CANT_DEMANDANTES_TOTAL, CANT_NODEMANDANTES_TOTAL,
BHDC_SEL,  TCS_GRUPO_TRABAJOOCUPACION) %>%
mutate(realiza_domest = case_when(
TCS_GRUPO_DOMESTICO > 0 ~ "Realiza",
TRUE ~ "No realiza"))
data <- data %>% mutate_at(
vars(SEXO_SEL),
~as.factor(case_when(
. == 1 ~ "Mujer",
. == 2 ~ "Varón"
)))
data <- data %>% mutate_at(vars(CONDICION_ACTIVIDAD_AGRUPADA),
~as.factor(case_when(
. == 1 ~ "Ocupado",
. == 2 ~ "No ocupado"
)))
data <- data %>% select(-TCS_GRUPO_DOMESTICO)
set.seed(123)
split <- initial_split(data)
train <- training(split)
test <- testing(split)
recipe <- recipe(realiza_domest ~ ., data = train)%>%
update_role(ID, new_role = "id")
wf <- workflow() %>%
add_recipe(recipe)
tree_spec <- decision_tree() %>%
set_engine("rpart") %>%
set_mode("classification")
decision_tree <- wf %>%
add_model(tree_spec) %>%
fit(train)
decision_tree %>%
last_fit(split) %>%
collect_metrics()
tree_spec <- bag_tree() %>%
set_engine("rpart", times = 20) %>%
set_mode("classification")
tree_bag <- wf %>%
add_model(tree_spec) %>%
fit(train)
tree_bag
model_perfo_tree <- tree_bag %>%
last_fit(split) %>%
collect_metrics()
model_perfo_tree
preds <- tree_bag %>%
last_fit(split) %>%
collect_predictions()
preds %>%
metrics(realiza_domest, .pred_class)
knitr::opts_chunk$set(echo = TRUE)
final_tree <- readRDS('./model_decision_tree.RDS')
tree_res <- readRDS('./tree_tuning.RDS')
library(tidyverse)
library(tidymodels)
library(baguette)
library(rpart.plot)
data <- read_delim("../data/enut2021_base.txt", delim = "|")
data <- data %>% select(ID, SEXO_SEL, EDAD_SEL, TCS_GRUPO_DOMESTICO, CONDICION_ACTIVIDAD_AGRUPADA,
NIVEL_EDUCATIVO_AGRUPADO, CANT_DEMANDANTES_TOTAL, CANT_NODEMANDANTES_TOTAL,
BHCH04_SEL, BHDC_SEL) %>%
mutate(realiza_domest = as.factor(case_when(
TCS_GRUPO_DOMESTICO > 0 ~ "Realiza",
TRUE ~ "No realiza")))
data <- data %>% mutate_at(
vars(SEXO_SEL),
~as.factor(case_when(
. == 1 ~ "Mujer",
. == 2 ~ "Varón"
)))
data <- data %>% mutate_at(vars(CONDICION_ACTIVIDAD_AGRUPADA),
~as.factor(case_when(
. == 1 ~ "Ocupado",
. == 2 ~ "No ocupado"
)))
data <- data %>% mutate_at(vars(BHCH04_SEL),
~as.factor(case_when(
. == 1 ~ "Jefe/a",
. == 2 ~ "Cónyuge/pareja",
. == 3 ~ "Hijo/a",
. == 4 ~ "Hijastro/a",
. == 5 ~ "Yerno/nuera",
. == 6 ~ "Nieto/a",
. == 7 ~ "Padre o madre",
. == 8 ~ "Suegro/a",
. == 9 ~ "Hermano/a",
. == 10 ~ "Cuñado/a",
. == 11 ~ "Sobrino/a",
. == 12 ~ "Abuelo/a",
. == 13 ~ "Otro familiar",
. == 14 ~ "Otro no familiar")))
data <- data %>% mutate_at(vars(BHDC_SEL),
~as.factor(case_when(
. == 0 ~ "No es demandante de cuidado",
. == 1 ~ "Es demandante de cuidado"
)))
data <- data %>% select(-TCS_GRUPO_DOMESTICO)
set.seed(123)
split <- initial_split(data, strata = realiza_domest)
train <- training(split)
test <- testing(split)
table(test$realiza_domest)
data <- read_delim("../data/enut2021_base.txt", delim = "|")
data <- data %>% select(ID, SEXO_SEL, EDAD_SEL, TCS_GRUPO_DOMESTICO, CONDICION_ACTIVIDAD_AGRUPADA,
NIVEL_EDUCATIVO_AGRUPADO, CANT_DEMANDANTES_TOTAL, CANT_NODEMANDANTES_TOTAL,
BHCH04_SEL, BHDC_SEL) %>%
mutate(realiza_domest = as.factor(case_when(
TCS_GRUPO_DOMESTICO > 60 ~ "Realiza",
TRUE ~ "No realiza")))
data <- data %>% mutate_at(
vars(SEXO_SEL),
~as.factor(case_when(
. == 1 ~ "Mujer",
. == 2 ~ "Varón"
)))
data <- data %>% mutate_at(vars(CONDICION_ACTIVIDAD_AGRUPADA),
~as.factor(case_when(
. == 1 ~ "Ocupado",
. == 2 ~ "No ocupado"
)))
data <- data %>% mutate_at(vars(BHCH04_SEL),
~as.factor(case_when(
. == 1 ~ "Jefe/a",
. == 2 ~ "Cónyuge/pareja",
. == 3 ~ "Hijo/a",
. == 4 ~ "Hijastro/a",
. == 5 ~ "Yerno/nuera",
. == 6 ~ "Nieto/a",
. == 7 ~ "Padre o madre",
. == 8 ~ "Suegro/a",
. == 9 ~ "Hermano/a",
. == 10 ~ "Cuñado/a",
. == 11 ~ "Sobrino/a",
. == 12 ~ "Abuelo/a",
. == 13 ~ "Otro familiar",
. == 14 ~ "Otro no familiar")))
data <- data %>% mutate_at(vars(BHDC_SEL),
~as.factor(case_when(
. == 0 ~ "No es demandante de cuidado",
. == 1 ~ "Es demandante de cuidado"
)))
data <- data %>% select(-TCS_GRUPO_DOMESTICO)
table(test$realiza_domest)
set.seed(123)
split <- initial_split(data, strata = realiza_domest)
train <- training(split)
test <- testing(split)
table(test$realiza_domest)
recipe <- recipe(realiza_domest ~ ., data = train)%>%
update_role(ID, new_role = "id") %>%
step_other(BHCH04_SEL, threshold = 0.2)
wf <- workflow() %>%
add_recipe(recipe)
knitr::opts_chunk$set(echo = TRUE)
final_tree <- readRDS('./model_decision_tree.RDS')
tree_res <- readRDS('./tree_tuning.RDS')
library(tidyverse)
library(tidymodels)
library(baguette)
library(rpart.plot)
data <- read_delim("../data/enut2021_base.txt", delim = "|")
data <- data %>% select(ID, SEXO_SEL, EDAD_SEL, TCS_GRUPO_DOMESTICO, CONDICION_ACTIVIDAD_AGRUPADA,
NIVEL_EDUCATIVO_AGRUPADO, CANT_DEMANDANTES_TOTAL, CANT_NODEMANDANTES_TOTAL,
BHCH04_SEL, BHDC_SEL) %>%
mutate(realiza_domest = as.factor(case_when(
TCS_GRUPO_DOMESTICO > 60 ~ "Realiza",
TRUE ~ "No realiza")))
data <- data %>% mutate_at(
vars(SEXO_SEL),
~as.factor(case_when(
. == 1 ~ "Mujer",
. == 2 ~ "Varón"
)))
data <- data %>% mutate_at(vars(CONDICION_ACTIVIDAD_AGRUPADA),
~as.factor(case_when(
. == 1 ~ "Ocupado",
. == 2 ~ "No ocupado"
)))
data <- data %>% mutate_at(vars(BHCH04_SEL),
~as.factor(case_when(
. == 1 ~ "Jefe/a",
. == 2 ~ "Cónyuge/pareja",
. == 3 ~ "Hijo/a",
. == 4 ~ "Hijastro/a",
. == 5 ~ "Yerno/nuera",
. == 6 ~ "Nieto/a",
. == 7 ~ "Padre o madre",
. == 8 ~ "Suegro/a",
. == 9 ~ "Hermano/a",
. == 10 ~ "Cuñado/a",
. == 11 ~ "Sobrino/a",
. == 12 ~ "Abuelo/a",
. == 13 ~ "Otro familiar",
. == 14 ~ "Otro no familiar")))
data <- data %>% mutate_at(vars(BHDC_SEL),
~as.factor(case_when(
. == 0 ~ "No es demandante de cuidado",
. == 1 ~ "Es demandante de cuidado"
)))
data <- data %>% select(-TCS_GRUPO_DOMESTICO)
set.seed(123)
split <- initial_split(data, strata = realiza_domest)
train <- training(split)
test <- testing(split)
table(test$realiza_domest)
tree_spec <- bag_tree() %>%
set_engine("rpart", times = 5) %>%
set_mode("classification")
tree_bag <- wf %>%
add_model(tree_spec) %>%
fit(train)
wf <- workflow() %>%
add_recipe(recipe)
recipe <- recipe(realiza_domest ~ ., data = train)%>%
update_role(ID, new_role = "id") %>%
step_other(BHCH04_SEL, threshold = 0.2)
wf <- workflow() %>%
add_recipe(recipe)
tree_bag <- wf %>%
add_model(tree_spec) %>%
fit(train)
tree_bag
model_perfo_tree <- tree_bag %>%
last_fit(split) %>%
collect_metrics()
model_perfo_tree
preds <- tree_bag %>%
last_fit(split) %>%
collect_predictions()
preds %>%
metrics(realiza_domest, .pred_class)
tree_bag %>%
predict(test) %>%
bind_cols(test) %>%
conf_mat(realiza_domest, .pred_class)
